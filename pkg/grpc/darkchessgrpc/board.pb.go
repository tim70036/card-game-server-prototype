// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: darkchess/board.proto

package darkchessgrpc

import (
	_ "card-game-server-prototype/pkg/grpc"
	commongrpc "card-game-server-prototype/pkg/grpc/commongrpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GridPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *GridPosition) Reset() {
	*x = GridPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_darkchess_board_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GridPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GridPosition) ProtoMessage() {}

func (x *GridPosition) ProtoReflect() protoreflect.Message {
	mi := &file_darkchess_board_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GridPosition.ProtoReflect.Descriptor instead.
func (*GridPosition) Descriptor() ([]byte, []int) {
	return file_darkchess_board_proto_rawDescGZIP(), []int{0}
}

func (x *GridPosition) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *GridPosition) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Cell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GridPosition *GridPosition           `protobuf:"bytes,1,opt,name=grid_position,json=gridPosition,proto3" json:"grid_position,omitempty"`
	Piece        commongrpc.CnChessPiece `protobuf:"varint,2,opt,name=piece,proto3,enum=common.CnChessPiece" json:"piece,omitempty"` // InvalidPiece if cell is empty
	IsRevealed   bool                    `protobuf:"varint,3,opt,name=is_revealed,json=isRevealed,proto3" json:"is_revealed,omitempty"`
	IsEmpty      bool                    `protobuf:"varint,4,opt,name=is_empty,json=isEmpty,proto3" json:"is_empty,omitempty"`
}

func (x *Cell) Reset() {
	*x = Cell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_darkchess_board_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cell) ProtoMessage() {}

func (x *Cell) ProtoReflect() protoreflect.Message {
	mi := &file_darkchess_board_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cell.ProtoReflect.Descriptor instead.
func (*Cell) Descriptor() ([]byte, []int) {
	return file_darkchess_board_proto_rawDescGZIP(), []int{1}
}

func (x *Cell) GetGridPosition() *GridPosition {
	if x != nil {
		return x.GridPosition
	}
	return nil
}

func (x *Cell) GetPiece() commongrpc.CnChessPiece {
	if x != nil {
		return x.Piece
	}
	return commongrpc.CnChessPiece(0)
}

func (x *Cell) GetIsRevealed() bool {
	if x != nil {
		return x.IsRevealed
	}
	return false
}

func (x *Cell) GetIsEmpty() bool {
	if x != nil {
		return x.IsEmpty
	}
	return false
}

type CapturedPieces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pieces []commongrpc.CnChessPiece `protobuf:"varint,1,rep,packed,name=pieces,proto3,enum=common.CnChessPiece" json:"pieces,omitempty"` // append latest captured pieces
}

func (x *CapturedPieces) Reset() {
	*x = CapturedPieces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_darkchess_board_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapturedPieces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapturedPieces) ProtoMessage() {}

func (x *CapturedPieces) ProtoReflect() protoreflect.Message {
	mi := &file_darkchess_board_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapturedPieces.ProtoReflect.Descriptor instead.
func (*CapturedPieces) Descriptor() ([]byte, []int) {
	return file_darkchess_board_proto_rawDescGZIP(), []int{2}
}

func (x *CapturedPieces) GetPieces() []commongrpc.CnChessPiece {
	if x != nil {
		return x.Pieces
	}
	return nil
}

type Board struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cells []*Cell `protobuf:"bytes,1,rep,name=cells,proto3" json:"cells,omitempty"` // 32 cells
}

func (x *Board) Reset() {
	*x = Board{}
	if protoimpl.UnsafeEnabled {
		mi := &file_darkchess_board_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Board) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Board) ProtoMessage() {}

func (x *Board) ProtoReflect() protoreflect.Message {
	mi := &file_darkchess_board_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Board.ProtoReflect.Descriptor instead.
func (*Board) Descriptor() ([]byte, []int) {
	return file_darkchess_board_proto_rawDescGZIP(), []int{3}
}

func (x *Board) GetCells() []*Cell {
	if x != nil {
		return x.Cells
	}
	return nil
}

type LastActionCell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GridPosition    *GridPosition           `protobuf:"bytes,1,opt,name=grid_position,json=gridPosition,proto3" json:"grid_position,omitempty"`
	Piece           commongrpc.CnChessPiece `protobuf:"varint,2,opt,name=piece,proto3,enum=common.CnChessPiece" json:"piece,omitempty"` // InvalidPiece if cell is empty
	IsRevealAction  bool                    `protobuf:"varint,3,opt,name=is_reveal_action,json=isRevealAction,proto3" json:"is_reveal_action,omitempty"`
	IsMoveAction    bool                    `protobuf:"varint,4,opt,name=is_move_action,json=isMoveAction,proto3" json:"is_move_action,omitempty"`
	IsCaptureAction bool                    `protobuf:"varint,5,opt,name=is_capture_action,json=isCaptureAction,proto3" json:"is_capture_action,omitempty"`
}

func (x *LastActionCell) Reset() {
	*x = LastActionCell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_darkchess_board_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastActionCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastActionCell) ProtoMessage() {}

func (x *LastActionCell) ProtoReflect() protoreflect.Message {
	mi := &file_darkchess_board_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastActionCell.ProtoReflect.Descriptor instead.
func (*LastActionCell) Descriptor() ([]byte, []int) {
	return file_darkchess_board_proto_rawDescGZIP(), []int{4}
}

func (x *LastActionCell) GetGridPosition() *GridPosition {
	if x != nil {
		return x.GridPosition
	}
	return nil
}

func (x *LastActionCell) GetPiece() commongrpc.CnChessPiece {
	if x != nil {
		return x.Piece
	}
	return commongrpc.CnChessPiece(0)
}

func (x *LastActionCell) GetIsRevealAction() bool {
	if x != nil {
		return x.IsRevealAction
	}
	return false
}

func (x *LastActionCell) GetIsMoveAction() bool {
	if x != nil {
		return x.IsMoveAction
	}
	return false
}

func (x *LastActionCell) GetIsCaptureAction() bool {
	if x != nil {
		return x.IsCaptureAction
	}
	return false
}

var File_darkchess_board_proto protoreflect.FileDescriptor

var file_darkchess_board_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x61, 0x72, 0x6b, 0x63, 0x68, 0x65, 0x73, 0x73, 0x2f, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x64, 0x61, 0x72, 0x6b, 0x63, 0x68, 0x65,
	0x73, 0x73, 0x1a, 0x13, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x63, 0x68, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x2a, 0x0a, 0x0c, 0x47, 0x72, 0x69, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12,
	0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0xac, 0x01,
	0x0a, 0x04, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x3c, 0x0a, 0x0d, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x64, 0x61, 0x72, 0x6b, 0x63, 0x68, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x72, 0x69, 0x64, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x67, 0x72, 0x69, 0x64, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x05, 0x70, 0x69, 0x65, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6e, 0x43,
	0x68, 0x65, 0x73, 0x73, 0x50, 0x69, 0x65, 0x63, 0x65, 0x52, 0x05, 0x70, 0x69, 0x65, 0x63, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x65,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3e, 0x0a, 0x0e,
	0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x64, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x12, 0x2c,
	0x0a, 0x06, 0x70, 0x69, 0x65, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6e, 0x43, 0x68, 0x65, 0x73, 0x73, 0x50,
	0x69, 0x65, 0x63, 0x65, 0x52, 0x06, 0x70, 0x69, 0x65, 0x63, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x05,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x61, 0x72, 0x6b, 0x63, 0x68, 0x65, 0x73, 0x73,
	0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0xf6, 0x01, 0x0a,
	0x0e, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x65, 0x6c, 0x6c, 0x12,
	0x3c, 0x0a, 0x0d, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x72, 0x6b, 0x63, 0x68, 0x65,
	0x73, 0x73, 0x2e, 0x47, 0x72, 0x69, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x67, 0x72, 0x69, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x05, 0x70, 0x69, 0x65, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6e, 0x43, 0x68, 0x65, 0x73, 0x73, 0x50, 0x69, 0x65,
	0x63, 0x65, 0x52, 0x05, 0x70, 0x69, 0x65, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f,
	0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x4d,
	0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f,
	0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x72, 0x5a, 0x32, 0x63, 0x61, 0x72, 0x64, 0x2d, 0x67, 0x61,
	0x6d, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x61, 0x72,
	0x6b, 0x63, 0x68, 0x65, 0x73, 0x73, 0x67, 0x72, 0x70, 0x63, 0x3b, 0xaa, 0x02, 0x1f, 0x4a, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x44, 0x61, 0x72,
	0x6b, 0x43, 0x68, 0x65, 0x73, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0xca, 0xb2, 0x04,
	0x18, 0x4a, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x2e,
	0x44, 0x61, 0x72, 0x6b, 0x43, 0x68, 0x65, 0x73, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_darkchess_board_proto_rawDescOnce sync.Once
	file_darkchess_board_proto_rawDescData = file_darkchess_board_proto_rawDesc
)

func file_darkchess_board_proto_rawDescGZIP() []byte {
	file_darkchess_board_proto_rawDescOnce.Do(func() {
		file_darkchess_board_proto_rawDescData = protoimpl.X.CompressGZIP(file_darkchess_board_proto_rawDescData)
	})
	return file_darkchess_board_proto_rawDescData
}

var file_darkchess_board_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_darkchess_board_proto_goTypes = []interface{}{
	(*GridPosition)(nil),         // 0: darkchess.GridPosition
	(*Cell)(nil),                 // 1: darkchess.Cell
	(*CapturedPieces)(nil),       // 2: darkchess.CapturedPieces
	(*Board)(nil),                // 3: darkchess.Board
	(*LastActionCell)(nil),       // 4: darkchess.LastActionCell
	(commongrpc.CnChessPiece)(0), // 5: common.CnChessPiece
}
var file_darkchess_board_proto_depIdxs = []int32{
	0, // 0: darkchess.Cell.grid_position:type_name -> darkchess.GridPosition
	5, // 1: darkchess.Cell.piece:type_name -> common.CnChessPiece
	5, // 2: darkchess.CapturedPieces.pieces:type_name -> common.CnChessPiece
	1, // 3: darkchess.Board.cells:type_name -> darkchess.Cell
	0, // 4: darkchess.LastActionCell.grid_position:type_name -> darkchess.GridPosition
	5, // 5: darkchess.LastActionCell.piece:type_name -> common.CnChessPiece
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_darkchess_board_proto_init() }
func file_darkchess_board_proto_init() {
	if File_darkchess_board_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_darkchess_board_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GridPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_darkchess_board_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_darkchess_board_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapturedPieces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_darkchess_board_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Board); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_darkchess_board_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LastActionCell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_darkchess_board_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_darkchess_board_proto_goTypes,
		DependencyIndexes: file_darkchess_board_proto_depIdxs,
		MessageInfos:      file_darkchess_board_proto_msgTypes,
	}.Build()
	File_darkchess_board_proto = out.File
	file_darkchess_board_proto_rawDesc = nil
	file_darkchess_board_proto_goTypes = nil
	file_darkchess_board_proto_depIdxs = nil
}
